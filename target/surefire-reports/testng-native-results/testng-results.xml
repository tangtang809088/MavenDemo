<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="0" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="23" started-at="2019-03-10T08:13:16Z" finished-at="2019-03-10T08:13:16Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="23" started-at="2019-03-10T08:13:16Z" finished-at="2019-03-10T08:13:16Z">
      <class name="TestCases.NewTest">
        <test-method status="FAIL" signature="beforeSuite()[pri:0, instance:TestCases.NewTest@61dc03ce]" name="beforeSuite" is-config="true" duration-ms="0" started-at="2019-03-10T16:13:16Z" finished-at="2019-03-10T16:13:16Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver executable does not exist: D:\唐江的文件夹\tangjiang\测试资料\自动化培训\PO\PageObjectDemo\null\chromedriver.exe]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver executable does not exist: D:\唐江的文件夹\tangjiang\测试资料\自动化培训\PO\PageObjectDemo\null\chromedriver.exe
	at com.google.common.base.Preconditions.checkState(Preconditions.java:199)
	at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:121)
	at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:116)
	at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:32)
	at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:137)
	at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:296)
	at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:88)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:116)
	at com.bbc.PageObjectDemo.BrowserUtil.setupChrome(BrowserUtil.java:14)
	at TestCases.NewTest.beforeSuite(NewTest.java:63)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:510)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:211)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:298)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="SKIP" signature="beforeTest()[pri:0, instance:TestCases.NewTest@61dc03ce]" name="beforeTest" is-config="true" duration-ms="0" started-at="2019-03-10T16:13:16Z" finished-at="2019-03-10T16:13:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="SKIP" signature="beforeClass()[pri:0, instance:TestCases.NewTest@61dc03ce]" name="beforeClass" is-config="true" duration-ms="0" started-at="2019-03-10T16:13:16Z" finished-at="2019-03-10T16:13:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:TestCases.NewTest@61dc03ce]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-03-10T16:13:16Z" finished-at="2019-03-10T16:13:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="test_baidu()[pri:0, instance:TestCases.NewTest@61dc03ce]" name="test_baidu" duration-ms="0" started-at="2019-03-10T16:13:16Z" finished-at="2019-03-10T16:13:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_baidu -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:TestCases.NewTest@61dc03ce]" name="afterClass" is-config="true" duration-ms="0" started-at="2019-03-10T16:13:16Z" finished-at="2019-03-10T16:13:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:TestCases.NewTest@61dc03ce]" name="afterMethod" is-config="true" duration-ms="0" started-at="2019-03-10T16:13:16Z" finished-at="2019-03-10T16:13:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterTest()[pri:0, instance:TestCases.NewTest@61dc03ce]" name="afterTest" is-config="true" duration-ms="0" started-at="2019-03-10T16:13:16Z" finished-at="2019-03-10T16:13:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="SKIP" signature="afterSuite()[pri:0, instance:TestCases.NewTest@61dc03ce]" name="afterSuite" is-config="true" duration-ms="0" started-at="2019-03-10T16:13:16Z" finished-at="2019-03-10T16:13:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- TestCases.NewTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
